#!/bin/bash

POSITIONAL_ARGS=()

ENABLE_ASAN=0

while [[ $# -gt 0 ]]; do
    case $1 in
        -a|--asan)
            ENABLE_ASAN=1
            shift
            ;;
        -d|--debug)
            ENABLE_DEBUG=1
            shift
            ;;
        *)
            POSITIONAL_ARGS+=("$1")
            shift
            ;;
    esac
done

set -- "${POSITIONAL_ARGS[@]}"

case $1 in
    patched)
        SOURCE_TREE=libtiff-patched
        ;;
    vulnerable)
        SOURCE_TREE=libtiff-vulnerable
        ;;
    *)
        echo \'patched\' or \'vulnerable\' must be specified.
        exit 1
        ;;
esac

CONFIGURE_ARGS=''
EXTRA_CFLAGS=''
EXTRA_LDFLAGS=''

DOCKER_TAG="$1"

echo version = $1
if [[ "$ENABLE_ASAN" -eq 1 ]];
then
    echo asan = yes
    EXTRA_CFLAGS+=' -fsanitize=address'
    EXTRA_LDFLAGS+=' -fsanitize=address'
    DOCKER_TAG+="-asan"
else
    echo asan = no
fi

if [[ "$ENABLE_DEBUG" -eq 1 ]];
then
    echo debug = yes
    EXTRA_CFLAGS+=' -g'
    EXTRA_LDFLAGS+=' -g'
    DOCKER_TAG+="-debug"
else
    echo debug = no
fi


docker build -t buffer-overflow-dataset/cve-2022-1355:$DOCKER_TAG \
    --build-arg SOURCE_TREE="$SOURCE_TREE" \
    --build-arg CONFIGURE_ARGS="$CONFIGURE_ARGS" \
    --build-arg EXTRA_CFLAGS="$EXTRA_CFLAGS" \
    --build-arg EXTRA_LDFLAGS="$EXTRA_LDFLAGS" .

